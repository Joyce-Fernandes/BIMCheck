{
  "name": "bimcheck",
  "version": "1.0.0",
  "description": "Validador de arquivos IFC para projetos BIM",
  "main": "src/index.html",
  "scripts": {
    "start": "node server.js",
    "dev": "node server.js",
    "test": "jest",
    "test:unit": "jest --testPathPattern=tests/unit",
    "test:e2e": "cypress run",
    "test:e2e:open": "cypress open",
    "test:e2e:main": "cypress run --spec 'cypress/e2e/bimcheck-main.cy.js'",
    "test:e2e:dashboard": "cypress run --spec 'cypress/e2e/bimcheck-dashboard.cy.js'",
    "test:e2e:all": "cypress run --spec 'cypress/e2e/*.cy.js'",
    "test:performance": "k6.exe run tests/performance_tests.js",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "lint": "eslint src/**/*.js",
    "lint:fix": "eslint src/**/*.js --fix",
    "format": "prettier --write src/**/*.{js,css,html}",
    "build": "echo 'Build completed'",
    "deploy": "echo 'Deploy completed'",
    "docs": "echo 'Documentation generated'",
    "generate:defects": "echo 'Documento de defeitos disponível em docs/defeitos_bimcheck.md'",
    "generate:policy": "echo 'Política de testes disponível em docs/politica_testes.md'",
    "generate:testcase": "echo 'Template de casos de teste disponível em docs/template_caso_teste.md'",
    "generate:heuristics": "echo 'Heurísticas de teste disponíveis em docs/heuristicas_teste.md'",
    "generate:plan": "echo 'Plano e estratégia de testes disponível em docs/plano_estrategia_testes.md'",
    "generate:automation": "echo 'Testes automatizados documentados em docs/testes_automatizados.md'",
    "generate:architecture": "echo 'Arquitetura do sistema documentada em docs/arquitetura_sistema.md'",
    "generate:business": "echo 'Regras de negócio documentadas em docs/regras_negocio.md'",
    "generate:stories": "echo 'User stories documentadas em docs/user_stories.md'",
    "generate:sessions": "echo 'Relatórios de sessão documentados em docs/relatorio_sessao.md'"
  },
  "keywords": [
    "bim",
    "ifc",
    "validation",
    "construction",
    "architecture",
    "engineering",
    "testing",
    "automation"
  ],
  "author": "Joyce Fernandes <joyce.f.silva@hotmail.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/seu-usuario/BIMCheck.git"
  },
  "bugs": {
    "url": "https://github.com/seu-usuario/BIMCheck/issues"
  },
  "homepage": "https://github.com/seu-usuario/BIMCheck#readme",
  "devDependencies": {
    "@babel/core": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "@types/jest": "^29.5.0",
    "cypress": "^14.5.4",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.4.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-html-reporter": "^3.1.0",
    "prettier": "^3.0.0"
  },
  "dependencies": {
    "three": "^0.137.0",
    "web-ifc": "^0.0.44",
    "xlsx": "^0.18.5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ],
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/*.test.js",
      "!src/**/*.spec.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "coverageReporters": [
      "text",
      "html",
      "lcov"
    ],
    "testMatch": [
      "**/tests/**/*.test.js",
      "**/tests/**/*.spec.js"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ]
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "es2021": true,
      "node": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "prettier"
    ],
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "rules": {
      "indent": [
        "error",
        2
      ],
      "linebreak-style": [
        "error",
        "unix"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "semi": [
        "error",
        "always"
      ],
      "no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "no-console": "warn"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ]
}
